@using K9TestProject3.Fantastic
@model K9TestProject3.Fantastic.ProductVM

@{
    ViewBag.Title = "EditProduct";
}

<h2>Edit Product</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Productname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Productname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Productname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            var number = 0;
        }

        @if (Model.ColorAttributes.Count != 0)
        {
            number = Model.ColorAttributes.Count;
        }
        else
        {
            number = 1;
        }

        @for (int i = 0; i < Model.ColorAttributes.Count; i++)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ColorAttributes[i].ColorId, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.ColorAttributes[i].ColorId, new { htmlAttributes = new { @class = "form-control" } })

                @for (int j = 0; j < Model.ColorAttributes[i].SizeAttributes.Count; j++)
                {
                    @Html.LabelFor(model => model.ColorAttributes[i].SizeAttributes[j].SizeId, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.ColorAttributes[i].SizeAttributes[j].SizeId, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.LabelFor(model => model.ColorAttributes[i].SizeAttributes[j].Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.ColorAttributes[i].SizeAttributes[j].Quantity, new { htmlAttributes = new { @class = "form-control" } })
                }

            </div>
        }
        @*@foreach (var colorAttribute in Model.ColorAttributes)
        {
            <div class="form-group">
                @Html.LabelFor(model => colorAttribute.ColorId, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => colorAttribute.ColorId, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        }*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
